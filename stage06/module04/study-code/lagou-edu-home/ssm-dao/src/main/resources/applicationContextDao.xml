<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <!--扫描并启用该包下的Spring注解-->
    <context:component-scan base-package="com.zq.dao"/>
    <!--导入domain层的Spring核心配置文件-->
    <import resource="classpath:applicationContextDomain.xml"/>
    <!--引入外部的jdbc.properties文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--创建数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--Spring整合MyBatis-->
    <!--创建一个sqlSessionFactory对象, 保存在IOC容器中, 映射器扫描配置器创建dao接口的代理对象时
    会用到-->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--mybatis使用的数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis核心配置文件的位置, 启用该文件里的配置-->
        <property name="configLocation" value="classpath:sqlMapConfig.xml"/>
    </bean>
    <!--映射器扫描配置器, 扫描basePackage包中的到接口对应的映射器, 使用spring为这些dao接口创建
    代理对象, 并将这些代理对象交给IOC容器管理-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--dao接口所在的包-->
        <property name="basePackage" value="com.zq.dao"/>
    </bean>

</beans>