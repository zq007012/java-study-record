<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--扫描并启用该包下的Spring注解-->
    <context:component-scan base-package="com.zq.controller"/>

    <!--处理器映射器和处理器适配器功能增强, 请求中的数据与Handler方法的参数间的转换-->
    <mvc:annotation-driven/>

    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--给逻辑视图名添加前缀-->
        <property name="prefix" value="/pages/"/>
        <!--给逻辑视图名添加后缀-->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--前端控制器拦截到的关于静态资源的请求(有后缀名的请求)不交处理器映射器处理,
    而是交给Tomcat服务器内置的DefaultServlet处理器去处理,
    Tomcat服务器内置的DefaultServlet处理器会直接找到对应的静态资源-->
    <mvc:default-servlet-handler/>

    <!--将前端控制器拦截到的'/img/**'格式的请求, 映射到本web应用下的img目录中的对应静态资源-->
    <!--<mvc:resources mapping="/img/**" location="/img/"/>-->

    <!--配置上传文件解析器(即通用的多部份解析器)-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--设置上传文件最大是多少, 单位是byte, 一般是5MB, 5 * 1024 * 1024-->
        <property name="maxUploadSize" value="5242880"/>
        <!--当上传多个文件时, 设置每个文件最大是多少, 单位是byte-->
        <!--如果不设置这个配置, 那么所有文件的总大小就不能超过"maxUploadSize", 设置了这个配置, 就没有总大小的限制了-->
        <property name="maxUploadSizePerFile" value="3145728"/>
        <!--设置上传文件时写入内存的最大值,文件的大小超过这个值时, 就会在服务器本地为上传文件生成多个临时文件, 用来接收上传
        文件的数据, 当上传文件的数据接收结束后, 就会将这些临时文件拼接成一个完成的上传文件,默认是10240, 单位是byte-->
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <bean class="com.zq.exception.GlobalHandlerExceptionResolver"
          id="globalHandlerExceptionResolver"/>

    <!--拦截器-->
    <mvc:interceptors>
        <!--注册一个拦截器-->
        <mvc:interceptor>
            <!--表示本拦截器要拦截的请求, '/'表示本web应用的访问路径,' /**'表示任意请求-->
            <mvc:mapping path="/**"/>
            <!--拦截器类-->
            <bean class="com.zq.interceptor.DemoInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>